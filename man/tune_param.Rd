% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{tune_param}
\alias{tune_param}
\title{Tunning the hyper-parameter for high-dimensional model}
\usage{
tune_param(
  x,
  y,
  u,
  lower = -2,
  upper = 2,
  step = 0.05,
  machines = 10,
  seed = 111
)
}
\arguments{
\item{x}{A n*p matrix as the training and validation covariate.}

\item{y}{A vector with length n as the response from training and validation.}

\item{u}{A scalar. The quantile level for model.}

\item{lower}{A scalar. The default is -2, the lower bound for grid search, established by exp(lower).}

\item{upper}{A scalar larger than lower. The default is +2, the upper bound for grid search, established by exp(upper).}

\item{step}{A scalar. The default is 0.05, the length of step for the grid search.}

\item{machines}{An integer. The default is 10, the number of machines for parallel computation.}

\item{seed}{An integer. The default is 111. The random seed.}
}
\value{
A scalar. The best lambda value for penalized model.
}
\description{
Build the function for tuning the parameter based on given data. In this function, the given samples will be split into training data and validation data according to the given proportion variable 20 times. Then, for each of the parameters generated by the grid from e^lower to the e^upper with a fixed step length, a high-dimensional model will be trained 20 times, and the function will output the best parameter that has the minimum average loss from 20 times repetition.
}
